<?php
class MenuController extends Muzyka_Admin
{
    protected $baseUrl = '/menu';

    public function init()
    {
        return parent::init(); // TODO: Change the autogenerated stub
        $this->view->baseUrl = $this->baseUrl;
    }

    public function indexAction()
    {
        $menuModel = Application_Service_Utilities::getModel('Menu');
        $menuList = $menuModel->getList();
        $this->view->baseUrl = $this->baseUrl;

        $data = array();
        foreach ($menuList as $row) {
            $tmp = array();
            $tmp['id'] = $row['id'];
            $tmp['label'] = $row['label'];
            $tmp['path'] = $row['path'];
            $tmp['parent_id'] = $row['parent_id'];
            $tmp['icon'] = $row['icon'];
            $tmp['rel'] = $row['rel'];
            array_push($data, $tmp);
        }

        $itemsByReference = array();

        // Build array of item references:
        foreach($data as $key => &$item) {
            $itemsByReference[$item['id']] = &$item;
            // Children array:
            $itemsByReference[$item['id']]['children'] = array();
        }

        // Set items as children of the relevant parent item.
        foreach($data as $key => &$item) {
            //echo "<pre>";print_r($itemsByReference[$item['parent_id']]);die;
            if ($item['parent_id'] && isset($itemsByReference[$item['parent_id']])) {
                $itemsByReference [$item['parent_id']]['children'][] = &$item;
            }
        }

        // Remove items that were added to parents elsewhere:
        foreach($data as $key => &$item) {
            if (is_array($data[$key]['children'])) {
                if (count($data[$key]['children']) == 0) {
                    unset($data[$key]['children']);
                }
            }
            if($item['parent_id'] && isset($itemsByReference[$item['parent_id']])) {
                unset($data[$key]);
            }
        }

        $tmp = [];
        foreach($data as $key => $value) {
            array_push($tmp, $value);
        }

        $json_menu = json_encode($tmp, JSON_UNESCAPED_UNICODE);
        $this->view->data = $json_menu;
    }

    public function saveAction() {
        $this->_helper->layout()->disableLayout();
        $this->_helper->viewRenderer->setNoRender();

        $data = $this->_request->getPost();
        $jsonStr = $data['json'];
        $obj = json_decode($jsonStr,true);

        echo $jsonStr;
    }

    public function insertRowAction() {
        $this->_helper->layout()->disableLayout();
        $this->_helper->viewRenderer->setNoRender();

        $data = $this->_request->getPost();
        $jsonStr = $data['data'];
        $dataObj = json_decode($jsonStr, true);

        $result = $this->menuModel->addNewRow($dataObj);

        echo $jsonStr;
    }

    public function updateRowAction() {
        $this->_helper->layout()->disableLayout();
        $this->_helper->viewRenderer->setNoRender();

        $data = $this->_request->getPost();
        $jsonStr = $data['data'];
        $dataObj = json_decode($jsonStr, true);

        $result = $this->menuModel->updateRowData($dataObj);

        echo $jsonStr;
    }

    public function updateDataAction() {
        $this->_helper->layout()->disableLayout();
        $this->_helper->viewRenderer->setNoRender();

        $data = $this->_request->getPost();
        $dataJson = $data['data'];
        $parentJson = $data['parent_data'];

        $dataObj = json_decode($dataJson, true);
        $parentObj = json_decode($parentJson, true);

        $parentId = $parentObj['id'];
        $id = $dataObj['id'];

        $result = $this->menuModel->updateParentData($parentId, $id);

        echo json_encode($result);
    }

    public function removeDataAction() {
        $this->_helper->layout()->disableLayout();
        $this->_helper->viewRenderer->setNoRender();

        $data = $this->_request->getPost();
        $dataJson = $data['data'];
        $dataObj = json_decode($dataJson, true);

        $result = $this->menuModel->removeData($dataObj);

        echo json_encode($result);

    }
}